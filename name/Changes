Important changes compared to namecoind 0.3:
============================================

* The output of commands like name_show now contains the fields "expired"
  and "transferred" always, with values set to true/false.  Previously,
  for "false" the field was missing, and for "true" it was set to 1.

* name_show and similar commands include more output fields now, in particular
  the full reference to the name's unspent output ("txid" plus now also "vout").
  Also new is "height", the last update height (in addition to expiration info).

* The data necessary for name_history (overwritten name states) is no longer
  kept by default.  To enable name_history, run namecoind with the
  "-namehistory" flag.  Changing the flag requires reindexing.

* The rand value generated by name_new is now 20 bytes long.  This is
  the maximal length specified by the protocol.  Previously, this limit
  was not fully used.

* name_firstupdate expects to be always passed the previous (name_new)
  txid.  This was optional before if the client was not restarted.

* When using createrawtransaction to build NAME_UPDATE operations, note that
  the name is not automatically added as input anymore (only an output script
  is created).  Use the extended name_show output to include the name output
  as tx input.  This enables createrawtransaction to work fully independently
  of the chain state.

* The private key export format was changed.  The old client uses the same
  format as Bitcoin private keys, while the new format is consistent with
  usual rules (address version + 128).  Old private keys can still be imported
  due to a compatibility rule.  The same is true for (encrypted) wallets:
  The storage format for encrypted private keys in the wallet is now
  harmonised with Bitcoin's format (the old client used a hack).  Wallets
  can be ported from the old to the new client, but not the other way.

* "getwork" and "getworkaux" are removed (in accordance with the modern
  Bitcoin code).  "getauxblock" has more return fields and the "target"
  variable (which was in reversed byte order, not matching the "target"
  returned by "getblocktemplate") is deprecated and renamed to "_target".
